version: "3.3"

services:

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres-ks-app:
    image: pgplusbackup
    volumes:
      - ${PWD}/pgplusbackup/postgres.conf:/etc/postgresql/postgresql.conf
      - ${PWD}/pgplusbackup/pgbackrest.conf:/etc/pgbackrest.conf
      - ${DB_DATA_DIR}:/var/lib/postgresql/data
      - ${PWD}/pgplusbackup/initdb:/docker-entrypoint-initdb.d
    env_file:
      - .env
    command: ["-c", "config_file=/etc/postgresql/postgresql.conf"]

    # To use postgres image without backup functionality:
    # Comment/delete above configuration of this service and uncomment the
    # following lines.
    #
    # image: postgres:15-bullseye
    # env_file:
    #   - .env
    # volumes:
    #   - ${DB_DATA_DIR}:/var/lib/postgresql/data

  ks-app:
    image: ${APP_IMG}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test_app.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.test_app.entrypoints=web"
      - "traefik.http.services.myservice.loadbalancer.server.port=${APP_PORT}"
    env_file:
      - .env
